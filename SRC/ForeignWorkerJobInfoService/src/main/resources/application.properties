spring.application.name=KisApiSpring

### DB ?? ###
# Master Data Source Configuration
spring.datasource.master.hikari.jdbc-url=jdbc:postgresql://server.aniss.co.kr:5432/kisapistock
spring.datasource.master.hikari.username=kisapistock
spring.datasource.master.hikari.password=kisapistock7137@@
spring.datasource.master.hikari.driver-class-name=org.postgresql.Driver
spring.datasource.master.hikari.maximum-pool-size=50
spring.datasource.master.hikari.minimum-idle=10
spring.datasource.master.hikari.read-only=false
spring.datasource.master.hikari.connection-timeout=30000
spring.datasource.master.hikari.idle-timeout=600000
spring.datasource.master.hikari.max-lifetime=1800000

# Slave Data Source Configuration
spring.datasource.slave.hikari.jdbc-url=jdbc:postgresql://server.aniss.co.kr:5432/kisapistock
spring.datasource.slave.hikari.username=kisapistock
spring.datasource.slave.hikari.password=kisapistock7137@@
spring.datasource.slave.hikari.driver-class-name=org.postgresql.Driver
spring.datasource.slave.hikari.maximum-pool-size=50
spring.datasource.slave.hikari.minimum-idle=10
spring.datasource.slave.hikari.read-only=true
spring.datasource.slave.hikari.connection-timeout=30000
spring.datasource.slave.hikari.idle-timeout=600000
spring.datasource.slave.hikari.max-lifetime=1800000


# Server
server.port=5100
server.tomcat.max-http-form-post-size=500000000
server.tomcat.max-swallow-size=500000000
server.tomcat.additional-tld-skip-patterns=*.jar

# Servlet View Path
spring.mvc.view.prefix=/WEB-INF/dist/
spring.mvc.view.suffix=.html
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,/WEB-INF/dist/
spring.mvc.static-path-pattern=/dist/**
spring.devtools.add-properties=true

#????? ?? ???
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB
spring.servlet.multipart.enabled=true

# Mybatis
mybatis.type-aliases-package=kis.stock.aniss
mybatis.mapper-locations=classpath*:fwj/common/daos/mapper/*.xml
mybatis.configuration.cache-enabled=true
mybatis.configuration.default-statement-timeout=3000
mybatis.configuration.return-instance-for-empty-row=false
mybatis.configuration.jdbc-type-for-null=varchar
mybatis.configuration.map-underscore-to-camel-case=true

# logging
logging.config=classpath:logback-config.xml

# locale [ko, jp, en, cha]
spring.profile.default.locale=kr
spring.mvc.locale=kr

# Etc
spring.profile.value=local
spring.devtools.restart.enabled=true

# Set the default charset to UTF-8 for responses
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

# KIS Secret Keys
#-->??
kis.appkey=PSnfM3HNmhwxmpt5VXFKtpPGhniNQF7SFm3J
kis.appsecret=uaBd2OzNOVYZM5QcclFo3qQmCrpKXd3OfPcwBfLxDSFGww3i72ogEw5vZnAmpuOOUhtBfiQ5W3SPH1ncp68rEu0ec49++/stB1Yt/dBoa0ieOt4cD7b5FpDzaV+KgQTQd0xccOLZRdtaBGGXmEv4i2laS+kfrUm6Swxu2b4x7wRS+PDH0k8=
#-->??
#kis.appkey=PS7PAONUada8XHVv8I5S7NESgrCcWfdA44wl
#kis.appsecret=Gp5SJhgZCWRmc3teOJzKzX1xG6qAMRqG0hUyM7Jf7s8PUf0s0vj0NhAcNLr4/QO7cPfdaiol9SnvNku7+HvvyH0zEa8EZTkkC5bj+HCauouGYdo+XWQGJ39r8o8lLaaJizYnZv/+lQCQ35jeBYXtftAa7a7Q+KtOki/Im6O4EdncgX/31eg=


#REST Base URL
#-->??
kis.rest.url.real=https://openapi.koreainvestment.com:9443
#-->??
#kis.rest.url.real=https://openapivts.koreainvestment.com:29443

#SOCKET - ??
kis.socket.url.real=ws://ops.koreainvestment.com
kis.socket.port.real=21000
kis.socket.custType=P
kis.socket.contentType=utf-8


# Telegram Key
telegram.webhook.url=http://t.me/aniss_auto_trade_bot
telegram.api.key=8437520174:AAG8kkw46CzmtJ-F2RDDYMrtuZGXqbqto78

# Discord Key
discord.webhook.url=https://discord.com/api/webhooks/1269921772271042605/utsQvd04bzYvYtxIKM3NDpBwAVsLjCZhkl-PqwbPDlX5dmCdh9zkLABGyeeLuGNMePqM

telegram.users=[{"memberId":"mark929", "telegramId":"6578983743"},{"memberId":"itbong", "telegramId":"5169518720"}]

# Worknet API
worknet.api.url=http://openapi.work.go.kr/opi/opi/opia/wantedApi.do

# 현재는 채용정보 API만 구현되어 있으므로 채용정보 키를 사용합니다.
worknet.api.authkey=e6e83bd2-e211-48c5-b3ec-66ad9ccc3d6f

# 향후 구현을 위한 기타 키
# worknet.api.works.authkey=f9881559-3236-4f8f-b542-29d50f52daa8
# worknet.api.occupations.authkey=4e5138f4-68d2-4079-bd0b-7930500611e1
# worknet.api.institution.authkey=d990a738-0450-49d7-b747-24cd5eb9cec4